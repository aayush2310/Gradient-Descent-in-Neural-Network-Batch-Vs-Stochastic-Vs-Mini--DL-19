import numpy as np
import pandas as pd
import time

df=pd.read_csv('/content/Social_Network_Ads.csv')

df.head()

df=df[['Age','EstimatedSalary','Purchased']]

df.head()

X=df.iloc[:,0:2]
y=df.iloc[:,-]

X

from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()

X_scaled=scaler.fit_transform(X)

#from sklearn.model_selection import train_test_split
#X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=2)

#X_train.shape

import tensorflow as tf
from tensorflow import keras
from keras import Sequential
from keras.layers import Dense

model = Sequential()

model.add(Dense(10,activation='relu',input_dim=2))
model.add(Dense(10,activation='relu'))
model.add(Dense(1,activation='sigmoid'))

model.summary()

model.compile(loss='binary_crossentropy',metrics=['accuracy'])
#start=time.time()
history=model.fit(X_scaled,y,epochs=10,batch_size=400,validation_split=0.2)               #BATCH GD
#print(time.time()-start)

#We see that validation accuracy is less for batch gradient descent.
